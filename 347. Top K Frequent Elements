https://leetcode.com/problems/top-k-frequent-elements/
class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        vector<int> ans;
        unordered_map<int, int> fmap;
        auto comp = [](const auto &x, const auto &y){
            return x.second < y.second;
        };
        for(int num : nums){
            fmap[num]++;
        }

        priority_queue<pair<int,int> , vector<pair<int,int>>, decltype(comp)> pq(comp);
        
        for(auto z = fmap.begin(); z != fmap.end(); z++){
            pq.push(make_pair(z->first, z->second));
        }

        while(k--){
            ans.push_back(pq.top().first);
            pq.pop();
        }
        
        return ans;
    }
};
